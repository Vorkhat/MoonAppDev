generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             BigInt           @id
  points         Float            @default(0)
  invitations    Invitation[]
  completedTasks TaskCompletion[]
}

model Invitation {
  id       BigInt @id @default(autoincrement())
  useCount Int    @default(0)
  user     User   @relation(fields: [userId], references: [id])
  userId   BigInt
}

view UsersTop {
  id     BigInt @id
  points Float
  rank   Int
}

model Task {
  id          BigInt           @id @default(autoincrement())
  type        TaskType
  url         String
  tracker     TaskTracker      @relation(fields: [trackerId], references: [id])
  trackerId   BigInt
  reward      Float
  scaling     Float            @default(1)
  complitions TaskCompletion[]

  @@unique([trackerId])
}

enum TaskType {
  Comment
  Game
  Task
  Invite
}

model TaskCompletion {
  id          BigInt   @id @default(autoincrement())
  task        Task     @relation(fields: [taskId], references: [id])
  taskId      BigInt
  user        User     @relation(fields: [userId], references: [id])
  userId      BigInt
  completedAt DateTime @default(now())
}

view CompletedTaskTypes {
  id     BigInt
  type   TaskType
  count  Int
  reward Float?

  @@unique([id, type])
}

model TaskTracker {
  id    BigInt @id @default(autoincrement())
  tasks Task[]
}
